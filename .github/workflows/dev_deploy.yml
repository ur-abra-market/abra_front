on:
  push:
    branches:
      - dev

jobs:
  deploy:
    name: dev release
    runs-on: ubuntu-22.04
    env:
      VM_SSH_PRIVATE_KEY_PATH: ${{ github.workspace }}/.ssh/id_ed25519
      VM_SSH_PRIVATE_KEY: ${{ secrets.DEV_VM_SSH_PRIVATE_KEY }}
      VM_SSH_HOST: ${{ secrets.DEV_VM_SSH_HOST }}
      VM_SSH_USER: ${{ secrets.DEV_VM_SSH_USER }}
      VM_WORKDIR: ${{ secrets.DEV_VM_WORKDIR }}
      GITHUB_BRANCH: ${{ secrets.DEV_GITHUB_BRANCH }}

    steps:
      - name: install ssh keys
        shell: bash
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_ed25519
          echo "$VM_SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
          ssh-keyscan -H $VM_SSH_HOST > ~/.ssh/known_hosts

      - name: connect and pull
        shell: bash
        run: ssh -i $VM_SSH_PRIVATE_KEY_PATH $VM_SSH_USER@$VM_SSH_HOST "cd $VM_WORKDIR && git switch $GITHUB_BRANCH && git remote prune origin && git pull && exit"

      - name: destroy previous version
        shell: bash
        run: ssh -i $VM_SSH_PRIVATE_KEY_PATH $VM_SSH_USER@$VM_SSH_HOST "cd $VM_WORKDIR && make stop && make destroy && exit"

      - name: build
        shell: bash
        run: ssh -i $VM_SSH_PRIVATE_KEY_PATH $VM_SSH_USER@$VM_SSH_HOST "cd $VM_WORKDIR && make build && exit"

      - name: run
        shell: bash
        run: ssh -i $VM_SSH_PRIVATE_KEY_PATH $VM_SSH_USER@$VM_SSH_HOST "cd $VM_WORKDIR && make application && exit"

      - name: cleanup
        shell: bash
        run: rm -rf ~/.ssh
